{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./directive/chatBotPage/chat-bot-page.html","webpack:///./directive/chatBotPage/chatBotPage.js","webpack:///./js/app.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA,8LAA8L,MAAM,yLAAyL,sBAAsB,+QAA+Q,MAAM,kLAAkL,gBAAgB,iLAAiL,2BAA2B,6YAA6Y,cAAc;AACj9C;AACA,sB;;;;;;;;;;;;ACHA;AAAA;AAAA;AAA+C;;AAEhC;AACf;AACA,iBAAiB,0DAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;;AAEb;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,CAAC,CAAC,E;;;;;;;;;;;;ACvFF;AAAA;AAAA;;AAEA;AACA;AACA;AAC+D;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,yBAAyB,0EAAW","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/app.js\");\n","// Module\nvar code = \"<ion-content class=\\\"has-header\\\">\\n    <div class=\\\"row\\\" \\n            ng-repeat=\\\"chat in initialChat.responses track by $index\\\">\\n        <div class=\\\"col\\\">\\n            {{chat}}\\n        </div>\\n        <div class=\\\"col\\\"></div>\\n    </div>\\n    <div class=\\\"reply row\\\" \\n            ng-if=\\\"hasUserSelectedOption\\\">\\n        <div class=\\\"col\\\">\\n            {{selectedOption.label}}\\n        </div>\\n        <div class=\\\"col col-75\\\"></div>\\n    </div>\\n    <div class=\\\"row animate\\\" \\n            ng-repeat=\\\"chat in chatList track by $index\\\"\\n            ng-class=\\\"annimateResponses?'animate-show':''\\\">\\n        <div class=\\\"col\\\">\\n            {{chat}}\\n        </div>\\n        <div class=\\\"col\\\"></div>\\n    </div>\\n    <div class=\\\"row reply\\\" \\n            ng-if=\\\"repliedMessage\\\">\\n        <div class=\\\"col\\\">\\n            {{repliedMessage}}\\n        </div>\\n        <div class=\\\"col col-75\\\"></div>\\n    </div>\\n    <div class=\\\"row\\\" \\n            ng-if=\\\"lastResponse\\\">\\n        <div class=\\\"col\\\">\\n            {{lastResponse.responses[0]}}\\n        </div>\\n        <div class=\\\"col\\\"></div>\\n    </div>\\n</ion-content>\\n<div class=\\\"bar bar-footer\\\">\\n    <div class=\\\"row\\\" \\n         ng-if=\\\"!hideOptions\\\">\\n        <button class=\\\"col button button-large button-positive button-outline\\\" \\n                ng-repeat=\\\"option in initialChat.options track by $index\\\" \\n                ng-click=\\\"updateChat($index)\\\">\\n            {{option.label}}\\n        </button>\\n    </div>\\n\\n    <div class=\\\"row form\\\" \\n         ng-if=\\\"updatedResult.component\\\">\\n            <input class=\\\"col col-75\\\" \\n                   type=\\\"textarea\\\" \\n                   placeholder=\\\"Enter your Reply\\\" \\n                   ng-model=\\\"form.input\\\">\\n            <button class=\\\"col button button-positive button-block\\\" \\n                    ng-click=\\\"submitReply(form.input)\\\">\\n                Submit\\n            </button>\\n    </div>  \\n</div>\";\n// Exports\nmodule.exports = code;","import templateStr from './chat-bot-page.html';\n\nexport default [() => {\n    return {\n        template:templateStr,\n        controller: ['$scope','$http','$timeout', ($scope,$http,$timeout) => {\n\t\t\t$scope.form = {\n\t\t\t\tinput:''\n            }\n            $scope.hideOptions = false;\n            let chatData;\n            $scope.chatList = [];\n\t\t\t$http.get('http://localhost:3000/api/conversation').then((result) => {\n                $scope.initialChat = result.data.units[0];\n                chatData = result.data;\n             });\n\n\t\t\t$scope.updateChat = (index) => {\n                $scope.selectedOption = $scope.initialChat.options[index];\n                $scope.hideOptions = true;\n                $scope.hasUserSelectedOption = true;\n            };\n            $scope.getNextResponse = (id) => {\n                $http.get(\"http://localhost:3000/api/conversation/\" + id).then((data) => {\n                    $scope.updatedResult = data.data;\n                    $scope.chatList.push($scope.updatedResult.responses[0]);\n                });\n            };\n            \n            $scope.$watch('hideOptions',(nv, ov) => {\n                if(nv != ov) {\n                    if($scope.selectedOption && $scope.selectedOption.nextUnit){\n                        $scope.getNextResponse($scope.selectedOption.nextUnit);\n                    }\n                }\n            });\n\n            $scope.$watch('updatedResult',(nv,ov) => {\n                if(nv != ov && !nv.component) {\n                    $scope.getNextResponse(nv.nextUnit);\n                    $timeout(()=>{\n                        $scope.annimateResponses = true\n                    },500);\n                };\n            });\n\n\t\t\t$scope.submitReply = (input) => {\n\t\t\t\tif(input.length <= 20 ) {\n\t\t\t\t\t$scope.expression = 'input.length <= 20';\n\t\t\t\t}else {\n\t\t\t\t\t$scope.expression = 'input.length > 20';\n                }\n\n                $http({\n                    url: 'http://localhost:3000/api/conversation',\n                    method: \"POST\",\n                    headers: {\n                        'content-type': 'application/json'\n                    },\n                    data:{ 'response' : input }\n                }).then((result) =>{\n                    chatData = result.data;\n                    if($scope.updatedResult && $scope.updatedResult.component) {\n                        $scope.lastResponse = chatData.units.find(item => {\n                            if(item.id === $scope.updatedResult.component.nextUnit){\n                                item.condition.find(item => {\n                                    if(item.expression === $scope.expression) {\n                                        $scope.nextUnit = item.nextUnit;\n                                    }\n                                })\n                            }\n                            if($scope.nextUnit && item.id === $scope.nextUnit) {\n                                return item;\n                            }\n                        })\n                    };\n\n                    if($scope.lastResponse && !$scope.lastResponse.nextUnit) {\n                        $scope.repliedMessage = chatData.units.slice(-1)[0].reply;\n                    }else{\n                        $scope.repliedMessage = '';\n                    }\n                    $scope.form={}\n                });\n\t\t\t}\n        }]\n    }\n}];","// Ionic Starter App\n\n// angular.module is a global place for creating, registering and retrieving Angular modules\n// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)\n// the 2nd parameter is an array of 'requires'\nimport chatBotPage from '../directive/chatBotPage/chatBotPage';\nangular.module('starter', ['ionic'])\n\n.run(function($ionicPlatform) {\n  $ionicPlatform.ready(function() {\n    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\n    // for form inputs).\n    // The reason we default this to hidden is that native apps don't usually show an accessory bar, at\n    // least on iOS. It's a dead giveaway that an app is using a Web View. However, it's sometimes\n    // useful especially with forms, though we would prefer giving the user a little more room\n    // to interact with the app.\n    if (window.cordova && window.Keyboard) {\n      window.Keyboard.hideKeyboardAccessoryBar(true);\n    }\n\n    if (window.StatusBar) {\n      // Set the statusbar to use the default style, tweak this to\n      // remove the status bar on iOS or change it to use white instead of dark colors.\n      StatusBar.styleDefault();\n    }\n  });\n})\n.directive('chatBotPage',chatBotPage)\n"],"sourceRoot":""}